apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: slskd
  namespace: slskd
spec:
  interval: 15m
  chart:
    spec:
      chart: slskd
      version: 4.4.4
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    securityContext:
      container:
        PUID: 568
        PGID: 568
        runAsUser: 568
        runAsGroup: 568
    addons:
      gluetun:
        enabled: true
        container:
          resources:
            limits:
              truecharts.org/tun: 1
          env:
            FIREWALL: "on"
            FIREWALL_OUTBOUND_SUBNETS: "192.168.0.0/24"
            VPN_TYPE: wireguard
            VPN_SERVICE_PROVIDER: custom
            WIREGUARD_ENDPOINT_PORT: ${WG_ENDPOINT_PORT}
            WIREGUARD_ENDPOINT_IP: ${WG_SLSKD_ENDPOINT_IP}
            WIREGUARD_ADDRESSES: ${WG_SLSKD_ADDRESSES}
            WIREGUARD_PRIVATE_KEY: ${WG_SLSKD_PRIVATE_KEY}
            WIREGUARD_PUBLIC_KEY: ${WG_SLSKD_PUBLIC_KEY}
    credentials:
      minio:
        name: minio
        type: s3
        path: ""
        accessKey: "${MINIO_ID}"
        bucket: "${MINIO_BUCKET}"
        encrKey: "${MINIO_ENCR_KEY}"
        secretKey: "${MINIO_KEY}"
        url: "${MINIO_URL}"
    persistence:
      data:
        volsync:
          - name: data
            type: restic
            credentials: minio
            cleanupCachePVC: true
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 0 15 * * *
      share:
        enabled: false
      incomplete:
        enabled: false
      complete:
        enabled: false
      medias:
        enabled: true
        type: nfs
        mountPath: /medias
        path: ${NFS_MEDIAS_PATH}
        server: ${NFS_SERVER}
    service:
      main:
        type: LoadBalancer
    ingress:
      main:
        enabled: true
        hosts:
          - host: "slskd.${DOMAIN_0}"
            paths:
            - path: /
              pathType: Prefix
        integrations:
          nginx:
            enabled: true
            auth:
              type: "authelia"
              internalHost: "authelia.authelia.svc.cluster.local:9091"
              externalHost: "auth.${DOMAIN_0}"
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
          homepage:
            enabled: true
            group: Downloads
            name: "slskd"
            widget:
              enabled: false
              key: ${SLSKD_WIDGET_KEY}
    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                SLSKD_NO_AUTH: true
                SLSKD_REMOTE_CONFIGURATION: true
                SLSKD_SLSK_LISTEN_PORT: 50300
                SLSKD_SLSK_USERNAME: ${SLSKD_USERNAME}
                SLSKD_SLSK_PASSWORD: ${SLSKD_PASSWORD}
                SLSKD_SHARED_DIR: "/medias/downloads/shared"
                SLSKD_DOWNLOADS_DIR: "/medias/downloads/complete/-lidarr"
                SLSKD_INCOMPLETE_DIR: "/medias/downloads/incomplete/lidarr"
                SLSKD_UMASK: 002
