apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: lidarr
spec:
  interval: 15m
  chart:
    spec:
      chart: lidarr
      version: 26.6.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
    force: true
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/hotio/lidarr
      pullPolicy: IfNotPresent
      tag: pr-plugins-2.14.4.4810
    env:
      PUID: 568
      PGID: 568
      UMASK: 002
    securityContext:
      container:
        runAsUser: 0  # Start as root so s6 can do its thing
        runAsGroup: 0
        fsGroup: 568  # Ensures mounted PVCs are writable by group 568
        readOnlyRootFilesystem: false
        allowPrivilegeEscalation: true

    credentials:
      minio:
        name: minio
        type: s3
        path: ""
        accessKey: "${MINIO_ID}"
        bucket: "${MINIO_BUCKET}"
        encrKey: "${MINIO_ENCR_KEY}"
        secretKey: "${MINIO_KEY}"
        url: "${MINIO_URL}"
    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: minio
            cleanupCachePVC: true
            dest:
              enabled: false
            src:
              enabled: true
              trigger:
                schedule: 15 10 * * *
      medias:
        enabled: true
        type: nfs
        mountPath: /medias
        path: ${NFS_MEDIAS_PATH}
        server: ${NFS_SERVER}
    service:
      main:
        type: LoadBalancer
    ingress:
      main:
        enabled: true
        hosts:
          - host: "lidarr.${DOMAIN_0}"
            paths:
            - path: /
              pathType: Prefix
        integrations:
          nginx:
            enabled: true
            auth:
              type: "authelia"
              internalHost: "authelia.authelia.svc.cluster.local:9091"
              externalHost: "auth.${DOMAIN_0}"
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
          homepage:
            enabled: true
            group: Arrs
            name: "Lidarr"
            widget:
              enabled: true
              custom:
                key: ${LIDARR_APIKEY}
    metrics:
      main:
        enabled: false
